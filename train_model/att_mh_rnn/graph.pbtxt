node {
  name: "data/wav_filename"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "data/ReadFile"
  op: "ReadFile"
  input: "data/wav_filename"
}
node {
  name: "data/DecodeWav"
  op: "DecodeWav"
  input: "data/ReadFile"
  attr {
    key: "desired_channels"
    value {
      i: 1
    }
  }
  attr {
    key: "desired_samples"
    value {
      i: 16000
    }
  }
}
node {
  name: "data/foreground_volume"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "data/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "data/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200>\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "data/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/ExpandDims"
  op: "ExpandDims"
  input: "data/DecodeWav"
  input: "data/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "data/ExpandDims_1"
  op: "ExpandDims"
  input: "data/ExpandDims"
  input: "data/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "data/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "data/strided_slice"
  op: "StridedSlice"
  input: "data/Shape"
  input: "data/strided_slice/stack"
  input: "data/strided_slice/stack_1"
  input: "data/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "data/Cast"
  op: "Cast"
  input: "data/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "data/mul"
  op: "Mul"
  input: "data/Cast"
  input: "data/Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "data/Cast_1"
  op: "Cast"
  input: "data/mul"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "data/resize/size/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "data/resize/size"
  op: "Pack"
  input: "data/Cast_1"
  input: "data/resize/size/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "data/resize/ResizeBilinear"
  op: "ResizeBilinear"
  input: "data/ExpandDims_1"
  input: "data/resize/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/Shape"
  op: "Shape"
  input: "data/resize/ResizeBilinear"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/strided_slice"
  op: "StridedSlice"
  input: "data/resize_image_with_crop_or_pad/Shape"
  input: "data/resize_image_with_crop_or_pad/strided_slice/stack"
  input: "data/resize_image_with_crop_or_pad/strided_slice/stack_1"
  input: "data/resize_image_with_crop_or_pad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_positive/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_positive/assert_less/Less"
  op: "Less"
  input: "data/resize_image_with_crop_or_pad/assert_positive/Const"
  input: "data/resize_image_with_crop_or_pad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_positive/assert_less/All"
  op: "All"
  input: "data/resize_image_with_crop_or_pad/assert_positive/assert_less/Less"
  input: "data/resize_image_with_crop_or_pad/assert_positive/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_positive/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "inner 3 dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_positive/assert_less/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "inner 3 dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_positive/assert_less/Assert/Assert"
  op: "Assert"
  input: "data/resize_image_with_crop_or_pad/assert_positive/assert_less/All"
  input: "data/resize_image_with_crop_or_pad/assert_positive/assert_less/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_greater_equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_greater_equal/GreaterEqual"
  op: "GreaterEqual"
  input: "data/resize_image_with_crop_or_pad/Rank"
  input: "data/resize_image_with_crop_or_pad/assert_greater_equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_greater_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_greater_equal/All"
  op: "All"
  input: "data/resize_image_with_crop_or_pad/assert_greater_equal/GreaterEqual"
  input: "data/resize_image_with_crop_or_pad/assert_greater_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\'image\' must be at least three-dimensional."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (data/resize_image_with_crop_or_pad/Rank:0) = "
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (data/resize_image_with_crop_or_pad/assert_greater_equal/y:0) = "
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\'image\' must be at least three-dimensional."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (data/resize_image_with_crop_or_pad/Rank:0) = "
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Assert/data_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (data/resize_image_with_crop_or_pad/assert_greater_equal/y:0) = "
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Assert"
  op: "Assert"
  input: "data/resize_image_with_crop_or_pad/assert_greater_equal/All"
  input: "data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Assert/data_0"
  input: "data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Assert/data_1"
  input: "data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Assert/data_2"
  input: "data/resize_image_with_crop_or_pad/Rank"
  input: "data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Assert/data_4"
  input: "data/resize_image_with_crop_or_pad/assert_greater_equal/y"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/control_dependency"
  op: "Identity"
  input: "data/resize/ResizeBilinear"
  input: "^data/resize_image_with_crop_or_pad/assert_greater_equal/Assert/Assert"
  input: "^data/resize_image_with_crop_or_pad/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@data/resize/ResizeBilinear"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/Shape_1"
  op: "Shape"
  input: "data/resize_image_with_crop_or_pad/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/unstack"
  op: "Unpack"
  input: "data/resize_image_with_crop_or_pad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16000
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/sub"
  op: "Sub"
  input: "data/resize_image_with_crop_or_pad/sub/x"
  input: "data/resize_image_with_crop_or_pad/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/Neg"
  op: "Neg"
  input: "data/resize_image_with_crop_or_pad/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/floordiv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/floordiv"
  op: "FloorDiv"
  input: "data/resize_image_with_crop_or_pad/Neg"
  input: "data/resize_image_with_crop_or_pad/floordiv/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/Maximum"
  op: "Maximum"
  input: "data/resize_image_with_crop_or_pad/floordiv"
  input: "data/resize_image_with_crop_or_pad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/floordiv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/floordiv_1"
  op: "FloorDiv"
  input: "data/resize_image_with_crop_or_pad/sub"
  input: "data/resize_image_with_crop_or_pad/floordiv_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/Maximum_1"
  op: "Maximum"
  input: "data/resize_image_with_crop_or_pad/floordiv_1"
  input: "data/resize_image_with_crop_or_pad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/Minimum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16000
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/Minimum"
  op: "Minimum"
  input: "data/resize_image_with_crop_or_pad/Minimum/x"
  input: "data/resize_image_with_crop_or_pad/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Shape"
  op: "Shape"
  input: "data/resize_image_with_crop_or_pad/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/strided_slice"
  op: "StridedSlice"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Shape"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/strided_slice/stack"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/strided_slice/stack_1"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Less"
  op: "Less"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/Const"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/All"
  op: "All"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Less"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "inner 3 dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "inner 3 dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Assert/Assert"
  op: "Assert"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/All"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/GreaterEqual"
  op: "GreaterEqual"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Rank"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/All"
  op: "All"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/GreaterEqual"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\'image\' must be at least three-dimensional."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (data/resize_image_with_crop_or_pad/crop_to_bounding_box/Rank:0) = "
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/y:0) = "
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\'image\' must be at least three-dimensional."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (data/resize_image_with_crop_or_pad/crop_to_bounding_box/Rank:0) = "
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Assert/data_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/y:0) = "
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Assert"
  op: "Assert"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/All"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Assert/data_0"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Assert/data_1"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Assert/data_2"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Rank"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Assert/data_4"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/y"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Shape_1"
  op: "Shape"
  input: "data/resize_image_with_crop_or_pad/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/unstack"
  op: "Unpack"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual"
  op: "GreaterEqual"
  input: "data/resize_image_with_crop_or_pad/Maximum"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "offset_height must be >= 0."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "offset_height must be >= 0."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert/Assert"
  op: "Assert"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Greater/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Greater"
  op: "Greater"
  input: "data/resize_image_with_crop_or_pad/Minimum"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "target_height must be > 0."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_1/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "target_height must be > 0."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_1/Assert"
  op: "Assert"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Greater"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_1/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/add"
  op: "AddV2"
  input: "data/resize_image_with_crop_or_pad/Minimum"
  input: "data/resize_image_with_crop_or_pad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual_1"
  op: "GreaterEqual"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/unstack:1"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "height must be >= target + offset."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_2/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "height must be >= target + offset."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_2/Assert"
  op: "Assert"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual_1"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_2/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/control_dependency"
  op: "Identity"
  input: "data/resize_image_with_crop_or_pad/control_dependency"
  input: "^data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert/Assert"
  input: "^data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_1/Assert"
  input: "^data/resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_2/Assert"
  input: "^data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_greater_equal/Assert/Assert"
  input: "^data/resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@data/resize/ResizeBilinear"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack"
  op: "Pack"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack/0"
  input: "data/resize_image_with_crop_or_pad/Maximum"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack/2"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1"
  op: "Pack"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1/0"
  input: "data/resize_image_with_crop_or_pad/Minimum"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1/2"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Slice"
  op: "Slice"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/control_dependency"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Shape"
  op: "Shape"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/strided_slice"
  op: "StridedSlice"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Shape"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/strided_slice/stack"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/strided_slice/stack_1"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Less"
  op: "Less"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/Const"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/All"
  op: "All"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Less"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "inner 3 dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "inner 3 dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Assert/Assert"
  op: "Assert"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/All"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/GreaterEqual"
  op: "GreaterEqual"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Rank"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/All"
  op: "All"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/GreaterEqual"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\'image\' must be at least three-dimensional."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (data/resize_image_with_crop_or_pad/pad_to_bounding_box/Rank:0) = "
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/y:0) = "
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\'image\' must be at least three-dimensional."
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (data/resize_image_with_crop_or_pad/pad_to_bounding_box/Rank:0) = "
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Assert/data_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/y:0) = "
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Assert"
  op: "Assert"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/All"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Assert/data_0"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Assert/data_1"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Assert/data_2"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Rank"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Assert/data_4"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/y"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Shape_1"
  op: "Shape"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/unstack"
  op: "Unpack"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16000
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/sub"
  op: "Sub"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/sub/x"
  input: "data/resize_image_with_crop_or_pad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/sub_1"
  op: "Sub"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/sub"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual"
  op: "GreaterEqual"
  input: "data/resize_image_with_crop_or_pad/Maximum_1"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "offset_height must be >= 0"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "offset_height must be >= 0"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Assert/Assert"
  op: "Assert"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_1"
  op: "GreaterEqual"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/sub_1"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "height must be <= target - offset"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_1/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "height must be <= target - offset"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_1/Assert"
  op: "Assert"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_1"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_1/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/control_dependency"
  op: "Identity"
  input: "data/resize_image_with_crop_or_pad/crop_to_bounding_box/Slice"
  input: "^data/resize_image_with_crop_or_pad/pad_to_bounding_box/Assert/Assert"
  input: "^data/resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_1/Assert"
  input: "^data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_greater_equal/Assert/Assert"
  input: "^data/resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@data/resize_image_with_crop_or_pad/crop_to_bounding_box/Slice"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack/5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack/6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack/7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack"
  op: "Pack"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack/0"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack/1"
  input: "data/resize_image_with_crop_or_pad/Maximum_1"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/sub_1"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack/4"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack/5"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack/6"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack/7"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Reshape"
  op: "Reshape"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/stack"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Pad"
  op: "Pad"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/control_dependency"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/resize_image_with_crop_or_pad/control_dependency_1"
  op: "Identity"
  input: "data/resize_image_with_crop_or_pad/pad_to_bounding_box/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@data/resize_image_with_crop_or_pad/pad_to_bounding_box/Pad"
      }
    }
  }
}
node {
  name: "data/Squeeze"
  op: "Squeeze"
  input: "data/resize_image_with_crop_or_pad/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 3
      }
    }
  }
}
node {
  name: "data/Mul_1"
  op: "Mul"
  input: "data/Squeeze"
  input: "data/foreground_volume"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "data/time_shift_padding"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "data/time_shift_offset"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "data/Pad"
  op: "Pad"
  input: "data/Mul_1"
  input: "data/time_shift_padding"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200>\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "data/Slice"
  op: "Slice"
  input: "data/Pad"
  input: "data/time_shift_offset"
  input: "data/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "data/background_data"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16000
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "data/background_volume"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "data/Mul_2"
  op: "Mul"
  input: "data/background_data"
  input: "data/background_volume"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "data/Add"
  op: "Add"
  input: "data/Mul_2"
  input: "data/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "data/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "data/clip_by_value/Minimum"
  op: "Minimum"
  input: "data/Add"
  input: "data/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "data/clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "data/clip_by_value"
  op: "Maximum"
  input: "data/clip_by_value/Minimum"
  input: "data/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "data/Mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32768.0
      }
    }
  }
}
node {
  name: "data/Mul_3"
  op: "Mul"
  input: "data/clip_by_value"
  input: "data/Mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "data/Cast_2"
  op: "Cast"
  input: "data/Mul_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT16
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "data/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "data/Reshape"
  op: "Reshape"
  input: "data/Cast_2"
  input: "data/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT16
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "data/AudioMicrofrontend"
  op: "AudioMicrofrontend"
  input: "data/Reshape"
  attr {
    key: "enable_log"
    value {
      b: true
    }
  }
  attr {
    key: "enable_pcan"
    value {
      b: true
    }
  }
  attr {
    key: "even_smoothing"
    value {
      f: 0.02500000037252903
    }
  }
  attr {
    key: "frame_stride"
    value {
      i: 1
    }
  }
  attr {
    key: "gain_bits"
    value {
      i: 21
    }
  }
  attr {
    key: "left_context"
    value {
      i: 0
    }
  }
  attr {
    key: "lower_band_limit"
    value {
      f: 20.0
    }
  }
  attr {
    key: "min_signal_remaining"
    value {
      f: 0.05000000074505806
    }
  }
  attr {
    key: "num_channels"
    value {
      i: 40
    }
  }
  attr {
    key: "odd_smoothing"
    value {
      f: 0.05999999865889549
    }
  }
  attr {
    key: "out_scale"
    value {
      i: 1
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "pcan_offset"
    value {
      f: 80.0
    }
  }
  attr {
    key: "pcan_strength"
    value {
      f: 0.949999988079071
    }
  }
  attr {
    key: "right_context"
    value {
      i: 0
    }
  }
  attr {
    key: "sample_rate"
    value {
      i: 16000
    }
  }
  attr {
    key: "scale_shift"
    value {
      i: 6
    }
  }
  attr {
    key: "smoothing_bits"
    value {
      i: 10
    }
  }
  attr {
    key: "upper_band_limit"
    value {
      f: 7000.0
    }
  }
  attr {
    key: "window_size"
    value {
      i: 40
    }
  }
  attr {
    key: "window_step"
    value {
      i: 20
    }
  }
  attr {
    key: "zero_padding"
    value {
      b: false
    }
  }
}
node {
  name: "data/Mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0390625
      }
    }
  }
}
node {
  name: "data/Mul_4"
  op: "Mul"
  input: "data/AudioMicrofrontend"
  input: "data/Mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 49
        }
        dim {
          size: 40
        }
      }
    }
  }
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "input_1"
  input: "ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^ExpandDims/dim"
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3302891254425049
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3302891254425049
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d/kernel/Initializer/random_uniform/max"
  input: "conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d/kernel/Initializer/random_uniform/mul"
  input: "conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
}
node {
  name: "conv2d/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d/kernel"
    }
  }
}
node {
  name: "conv2d/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d/kernel"
}
node {
  name: "conv2d/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d/kernel"
  input: "conv2d/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d/bias"
    }
  }
}
node {
  name: "conv2d/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d/bias"
}
node {
  name: "conv2d/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d/bias"
  input: "conv2d/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d/Conv2D"
  op: "Conv2D"
  input: "ExpandDims"
  input: "conv2d/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d/BiasAdd"
  op: "BiasAdd"
  input: "conv2d/Conv2D"
  input: "conv2d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d/Relu"
  op: "Relu"
  input: "conv2d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization/gamma"
    }
  }
}
node {
  name: "batch_normalization/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization/gamma"
}
node {
  name: "batch_normalization/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization/gamma"
  input: "batch_normalization/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization/beta"
    }
  }
}
node {
  name: "batch_normalization/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization/beta"
}
node {
  name: "batch_normalization/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization/beta"
  input: "batch_normalization/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization/moving_mean"
    }
  }
}
node {
  name: "batch_normalization/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization/moving_mean"
}
node {
  name: "batch_normalization/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization/moving_mean"
  input: "batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization/moving_variance"
    }
  }
}
node {
  name: "batch_normalization/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization/moving_variance"
}
node {
  name: "batch_normalization/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization/moving_variance"
  input: "batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "batch_normalization/cond"
  op: "If"
  input: "keras_learning_phase"
  input: "batch_normalization/gamma"
  input: "batch_normalization/beta"
  input: "batch_normalization/moving_mean"
  input: "batch_normalization/moving_variance"
  input: "conv2d/Relu"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "batch_normalization_cond_false_238"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 49
          }
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 10
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "batch_normalization_cond_true_237"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/Identity"
  op: "Identity"
  input: "batch_normalization/cond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond/Identity_1"
  op: "Identity"
  input: "batch_normalization/cond:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond/Identity_2"
  op: "Identity"
  input: "batch_normalization/cond:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond/Identity_3"
  op: "Identity"
  input: "batch_normalization/cond:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization/cond/Identity_4"
  op: "Identity"
  input: "batch_normalization/cond:4"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization/cond/Identity_5"
  op: "Identity"
  input: "batch_normalization/cond:5"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization/cond/Identity_6"
  op: "Identity"
  input: "batch_normalization/cond:6"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization/cond/Identity_7"
  op: "Identity"
  input: "batch_normalization/cond:7"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization/cond/Identity_8"
  op: "Identity"
  input: "batch_normalization/cond:8"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization/cond/Identity_9"
  op: "Identity"
  input: "batch_normalization/cond:9"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization/cond_1"
  op: "StatelessIf"
  input: "keras_learning_phase"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "batch_normalization_cond_1_false_306"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "batch_normalization_cond_1_true_305"
      }
    }
  }
}
node {
  name: "batch_normalization/cond_1/Identity"
  op: "Identity"
  input: "batch_normalization/cond_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization/AssignMovingAvg/sub/x"
  input: "batch_normalization/cond_1/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization/cond/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization/AssignMovingAvg/sub_1"
  input: "batch_normalization/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization/moving_mean"
  input: "batch_normalization/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization/moving_mean"
  input: "^batch_normalization/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization/AssignMovingAvg_1/sub/x"
  input: "batch_normalization/cond_1/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization/cond/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization/AssignMovingAvg_1/sub_1"
  input: "batch_normalization/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization/moving_variance"
  input: "batch_normalization/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization/moving_variance"
  input: "^batch_normalization/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3302891254425049
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3302891254425049
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_1/kernel/Initializer/random_uniform/max"
  input: "conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_1/kernel/Initializer/random_uniform/mul"
  input: "conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 10
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_1/kernel"
    }
  }
}
node {
  name: "conv2d_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_1/kernel"
}
node {
  name: "conv2d_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_1/kernel"
  input: "conv2d_1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_1/bias"
    }
  }
}
node {
  name: "conv2d_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_1/bias"
}
node {
  name: "conv2d_1/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_1/bias"
  input: "conv2d_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/Conv2D"
  op: "Conv2D"
  input: "batch_normalization/cond/Identity"
  input: "conv2d_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_1/Conv2D"
  input: "conv2d_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_1/Relu"
  op: "Relu"
  input: "conv2d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/gamma"
    }
  }
}
node {
  name: "batch_normalization_1/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/gamma"
}
node {
  name: "batch_normalization_1/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/beta"
    }
  }
}
node {
  name: "batch_normalization_1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/beta"
}
node {
  name: "batch_normalization_1/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/moving_mean"
}
node {
  name: "batch_normalization_1/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/moving_variance"
}
node {
  name: "batch_normalization_1/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_1/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond"
  op: "If"
  input: "keras_learning_phase"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/moving_variance"
  input: "conv2d_1/Relu"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
        i: 2
        i: 3
        i: 4
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "batch_normalization_1_cond_false_362"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 49
          }
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "batch_normalization_1_cond_true_361"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/Identity"
  op: "Identity"
  input: "batch_normalization_1/cond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Identity_1"
  op: "Identity"
  input: "batch_normalization_1/cond:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Identity_2"
  op: "Identity"
  input: "batch_normalization_1/cond:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Identity_3"
  op: "Identity"
  input: "batch_normalization_1/cond:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Identity_4"
  op: "Identity"
  input: "batch_normalization_1/cond:4"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Identity_5"
  op: "Identity"
  input: "batch_normalization_1/cond:5"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Identity_6"
  op: "Identity"
  input: "batch_normalization_1/cond:6"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Identity_7"
  op: "Identity"
  input: "batch_normalization_1/cond:7"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Identity_8"
  op: "Identity"
  input: "batch_normalization_1/cond:8"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Identity_9"
  op: "Identity"
  input: "batch_normalization_1/cond:9"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "batch_normalization_1/cond_1"
  op: "StatelessIf"
  input: "keras_learning_phase"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "batch_normalization_1_cond_1_false_430"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "batch_normalization_1_cond_1_true_429"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/Identity"
  op: "Identity"
  input: "batch_normalization_1/cond_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_1/AssignMovingAvg/sub/x"
  input: "batch_normalization_1/cond_1/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_1/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_1/cond/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_1/AssignMovingAvg/sub_1"
  input: "batch_normalization_1/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_mean"
  input: "^batch_normalization_1/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_1/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_1/cond_1/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_1/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_1/cond/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_1/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_1/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_1/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_variance"
  input: "^batch_normalization_1/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "reshape/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "d\000\000\0001\000\000\000(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "reshape/strided_slice"
  op: "StridedSlice"
  input: "reshape/Shape"
  input: "reshape/strided_slice/stack"
  input: "reshape/strided_slice/stack_1"
  input: "reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "reshape/Reshape/shape"
  op: "Pack"
  input: "reshape/strided_slice"
  input: "reshape/Reshape/shape/1"
  input: "reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "reshape/Reshape"
  op: "Reshape"
  input: "batch_normalization_1/cond/Identity"
  input: "reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.11895773559808731
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11895773559808731
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform/max"
  input: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/kernel"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/kernel"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform/mul"
  input: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/kernel"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 40
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bidirectional/forward_gru/gru_cell_1/kernel"
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  input: "bidirectional/forward_gru/gru_cell_1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/random_normal"
  op: "Add"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/random_normal/mul"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/Qr"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/mul"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/mul_1/x"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/forward_gru/gru_cell_1/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bidirectional/forward_gru/gru_cell_1/bias"
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/bias/Assign"
  op: "AssignVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  input: "bidirectional/forward_gru/gru_cell_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru/gru_cell_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.11895773559808731
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11895773559808731
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform/max"
  input: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/kernel"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/kernel"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform/mul"
  input: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/kernel"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 40
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bidirectional/backward_gru/gru_cell_2/kernel"
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  input: "bidirectional/backward_gru/gru_cell_2/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/random_normal"
  op: "Add"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/random_normal/mul"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/Qr"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/mul"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/mul_1/x"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional/backward_gru/gru_cell_2/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bidirectional/backward_gru/gru_cell_2/bias"
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/bias/Assign"
  op: "AssignVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  input: "bidirectional/backward_gru/gru_cell_2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru/gru_cell_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\0001\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/strided_slice"
  op: "StridedSlice"
  input: "bidirectional/forward_gru_1/Shape"
  input: "bidirectional/forward_gru_1/strided_slice/stack"
  input: "bidirectional/forward_gru_1/strided_slice/stack_1"
  input: "bidirectional/forward_gru_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/zeros/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/zeros/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/strided_slice"
  input: "bidirectional/forward_gru_1/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/zeros/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/zeros/Less"
  op: "Less"
  input: "bidirectional/forward_gru_1/zeros/mul"
  input: "bidirectional/forward_gru_1/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/zeros/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/zeros/packed"
  op: "Pack"
  input: "bidirectional/forward_gru_1/strided_slice"
  input: "bidirectional/forward_gru_1/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/zeros"
  op: "Fill"
  input: "bidirectional/forward_gru_1/zeros/packed"
  input: "bidirectional/forward_gru_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/transpose"
  op: "Transpose"
  input: "reshape/Reshape"
  input: "bidirectional/forward_gru_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "1\000\000\000d\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/strided_slice_1"
  op: "StridedSlice"
  input: "bidirectional/forward_gru_1/Shape_1"
  input: "bidirectional/forward_gru_1/strided_slice_1/stack"
  input: "bidirectional/forward_gru_1/strided_slice_1/stack_1"
  input: "bidirectional/forward_gru_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 49
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack"
  input: "bidirectional/forward_gru_1/gru_cell_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/zeros"
  input: "bidirectional/forward_gru_1/gru_cell_1/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1/split"
  input: "bidirectional/forward_gru_1/gru_cell_1/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1/Sigmoid"
  input: "bidirectional/forward_gru_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_1/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_2/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:3"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_3/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:4"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_4/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:5"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_5/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:6"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_6/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:7"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_7/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:8"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_8/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:9"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_9/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:10"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_10/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:11"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_11/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:12"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_12/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:13"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_13/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:14"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_14/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:15"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_15/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:16"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_16/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:17"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_17/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:18"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_18/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:19"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_19/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:20"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_20/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:21"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_21/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:22"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_22/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:23"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_23/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:24"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_24/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:25"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_25/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:26"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_26/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:27"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_27/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:28"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_28/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:29"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_29/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:30"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_30/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:31"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_31/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:32"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_32/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:33"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_33/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:34"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_34/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:35"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_35/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:36"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_36/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:37"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_37/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:38"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_38/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:39"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_39/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:40"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_40/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:41"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_41/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:42"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_42/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:43"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_43/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:44"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_44/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:45"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_45/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:46"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_46/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:47"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_47/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/unstack"
  op: "Unpack"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/MatMul"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/unstack:48"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/split"
  op: "Split"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/split/split_dim"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/MatMul_1"
  op: "MatMul"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/MatMul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/split_1"
  op: "SplitV"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/BiasAdd_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/Const_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/add"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/split"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/add_1"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/split:1"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/mul"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/Sigmoid_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/add_2"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/split:2"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/Tanh"
  op: "Tanh"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/mul_1"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/Sigmoid"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/sub"
  op: "Sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/sub/x"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/mul_2"
  op: "Mul"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/sub"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/gru_cell_1_48/add_3"
  op: "AddV2"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/mul_1"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/stack"
  op: "Pack"
  input: "bidirectional/forward_gru_1/gru_cell_1/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_1/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_2/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_3/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_4/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_5/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_6/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_7/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_8/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_9/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_10/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_11/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_12/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_13/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_14/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_15/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_16/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_17/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_18/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_19/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_20/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_21/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_22/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_23/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_24/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_25/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_26/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_27/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_28/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_29/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_30/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_31/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_32/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_33/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_34/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_35/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_36/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_37/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_38/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_39/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_40/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_41/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_42/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_43/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_44/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_45/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_46/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_47/add_3"
  input: "bidirectional/forward_gru_1/gru_cell_1_48/add_3"
  attr {
    key: "N"
    value {
      i: 49
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/transpose_1"
  op: "Transpose"
  input: "bidirectional/forward_gru_1/stack"
  input: "bidirectional/forward_gru_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional/forward_gru_1/runtime"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\0001\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/strided_slice"
  op: "StridedSlice"
  input: "bidirectional/backward_gru_1/Shape"
  input: "bidirectional/backward_gru_1/strided_slice/stack"
  input: "bidirectional/backward_gru_1/strided_slice/stack_1"
  input: "bidirectional/backward_gru_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/zeros/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/zeros/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/strided_slice"
  input: "bidirectional/backward_gru_1/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/zeros/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/zeros/Less"
  op: "Less"
  input: "bidirectional/backward_gru_1/zeros/mul"
  input: "bidirectional/backward_gru_1/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/zeros/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/zeros/packed"
  op: "Pack"
  input: "bidirectional/backward_gru_1/strided_slice"
  input: "bidirectional/backward_gru_1/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/zeros"
  op: "Fill"
  input: "bidirectional/backward_gru_1/zeros/packed"
  input: "bidirectional/backward_gru_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/transpose"
  op: "Transpose"
  input: "reshape/Reshape"
  input: "bidirectional/backward_gru_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "1\000\000\000d\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/strided_slice_1"
  op: "StridedSlice"
  input: "bidirectional/backward_gru_1/Shape_1"
  input: "bidirectional/backward_gru_1/strided_slice_1/stack"
  input: "bidirectional/backward_gru_1/strided_slice_1/stack_1"
  input: "bidirectional/backward_gru_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 49
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:48"
  input: "bidirectional/backward_gru_1/gru_cell_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/zeros"
  input: "bidirectional/backward_gru_1/gru_cell_2/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2/split"
  input: "bidirectional/backward_gru_1/gru_cell_2/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2/Sigmoid"
  input: "bidirectional/backward_gru_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:47"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_1/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:46"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_2/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:45"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_3/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:44"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_4/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:43"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_5/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:42"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_6/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:41"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_7/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:40"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_8/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:39"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_9/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:38"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_10/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:37"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_11/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:36"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_12/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:35"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_13/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:34"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_14/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:33"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_15/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:32"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_16/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:31"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_17/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:30"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_18/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:29"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_19/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:28"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_20/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:27"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_21/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:26"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_22/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:25"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_23/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:24"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_24/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:23"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_25/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:22"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_26/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:21"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_27/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:20"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_28/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:19"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_29/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:18"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_30/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:17"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_31/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:16"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_32/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:15"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_33/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:14"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_34/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:13"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_35/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:12"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_36/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:11"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_37/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:10"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_38/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:9"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_39/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:8"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_40/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:7"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_41/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:6"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_42/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:5"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_43/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:4"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_44/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:3"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_45/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_46/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_47/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/unstack"
  op: "Unpack"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/MatMul"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/unstack"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/split"
  op: "Split"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/split/split_dim"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/MatMul_1"
  op: "MatMul"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/MatMul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/split_1"
  op: "SplitV"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/BiasAdd_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/Const_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/add"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/split"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/add_1"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/split:1"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/mul"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/Sigmoid_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/add_2"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/split:2"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/Tanh"
  op: "Tanh"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/mul_1"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/Sigmoid"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/sub"
  op: "Sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/sub/x"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/mul_2"
  op: "Mul"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/sub"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/gru_cell_2_48/add_3"
  op: "AddV2"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/mul_1"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/stack"
  op: "Pack"
  input: "bidirectional/backward_gru_1/gru_cell_2/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_1/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_2/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_3/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_4/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_5/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_6/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_7/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_8/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_9/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_10/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_11/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_12/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_13/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_14/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_15/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_16/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_17/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_18/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_19/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_20/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_21/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_22/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_23/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_24/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_25/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_26/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_27/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_28/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_29/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_30/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_31/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_32/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_33/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_34/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_35/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_36/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_37/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_38/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_39/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_40/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_41/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_42/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_43/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_44/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_45/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_46/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_47/add_3"
  input: "bidirectional/backward_gru_1/gru_cell_2_48/add_3"
  attr {
    key: "N"
    value {
      i: 49
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/transpose_1"
  op: "Transpose"
  input: "bidirectional/backward_gru_1/stack"
  input: "bidirectional/backward_gru_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional/backward_gru_1/runtime"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional/ReverseV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional/ReverseV2"
  op: "ReverseV2"
  input: "bidirectional/backward_gru_1/transpose_1"
  input: "bidirectional/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bidirectional/concat"
  op: "ConcatV2"
  input: "bidirectional/forward_gru_1/transpose_1"
  input: "bidirectional/ReverseV2"
  input: "bidirectional/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform/max"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform/RandomUniform"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform"
  op: "Add"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform/mul"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Assign"
  op: "AssignVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/random_normal"
  op: "Add"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/random_normal/mul"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/Qr"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/mul"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/mul_1/x"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/forward_gru_1/gru_cell_4/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/bias/Assign"
  op: "AssignVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1/gru_cell_4/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform/max"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform/RandomUniform"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform"
  op: "Add"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform/mul"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Assign"
  op: "AssignVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/random_normal"
  op: "Add"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/random_normal/mul"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/Qr"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/mul"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/mul_1/x"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_1/backward_gru_1/gru_cell_5/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/bias/Assign"
  op: "AssignVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1/gru_cell_5/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\0001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/strided_slice"
  op: "StridedSlice"
  input: "bidirectional_1/forward_gru_1_1/Shape"
  input: "bidirectional_1/forward_gru_1_1/strided_slice/stack"
  input: "bidirectional_1/forward_gru_1_1/strided_slice/stack_1"
  input: "bidirectional_1/forward_gru_1_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/zeros/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/zeros/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/strided_slice"
  input: "bidirectional_1/forward_gru_1_1/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/zeros/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/zeros/Less"
  op: "Less"
  input: "bidirectional_1/forward_gru_1_1/zeros/mul"
  input: "bidirectional_1/forward_gru_1_1/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/zeros/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/zeros/packed"
  op: "Pack"
  input: "bidirectional_1/forward_gru_1_1/strided_slice"
  input: "bidirectional_1/forward_gru_1_1/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/zeros"
  op: "Fill"
  input: "bidirectional_1/forward_gru_1_1/zeros/packed"
  input: "bidirectional_1/forward_gru_1_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/transpose"
  op: "Transpose"
  input: "bidirectional/concat"
  input: "bidirectional_1/forward_gru_1_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "1\000\000\000d\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/strided_slice_1"
  op: "StridedSlice"
  input: "bidirectional_1/forward_gru_1_1/Shape_1"
  input: "bidirectional_1/forward_gru_1_1/strided_slice_1/stack"
  input: "bidirectional_1/forward_gru_1_1/strided_slice_1/stack_1"
  input: "bidirectional_1/forward_gru_1_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 49
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/zeros"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:4"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:5"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:6"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:7"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:8"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:9"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:10"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:11"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:12"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:13"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:14"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:15"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:16"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:17"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:18"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:19"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:20"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:21"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:22"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:23"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:24"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:25"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:26"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:27"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:28"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:29"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:30"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:31"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:32"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:33"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:34"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:35"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:36"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:37"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:38"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:39"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:40"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:41"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:42"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:43"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:44"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:45"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:46"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:47"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/unstack"
  op: "Unpack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/MatMul"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/unstack:48"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/split"
  op: "Split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/split/split_dim"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/MatMul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/split_1"
  op: "SplitV"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/BiasAdd_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/Const_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/add"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/split"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/add_1"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/split:1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/mul"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/Sigmoid_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/add_2"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/split:2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/Tanh"
  op: "Tanh"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/mul_1"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/Sigmoid"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/sub"
  op: "Sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/sub/x"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/mul_2"
  op: "Mul"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/sub"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/add_3"
  op: "AddV2"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/mul_1"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/stack"
  op: "Pack"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_1/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_2/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_3/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_4/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_5/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_6/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_7/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_8/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_9/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_10/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_11/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_12/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_13/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_14/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_15/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_16/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_17/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_18/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_19/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_20/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_21/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_22/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_23/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_24/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_25/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_26/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_27/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_28/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_29/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_30/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_31/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_32/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_33/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_34/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_35/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_36/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_37/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_38/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_39/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_40/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_41/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_42/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_43/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_44/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_45/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_46/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_47/add_3"
  input: "bidirectional_1/forward_gru_1_1/gru_cell_4_48/add_3"
  attr {
    key: "N"
    value {
      i: 49
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/transpose_1"
  op: "Transpose"
  input: "bidirectional_1/forward_gru_1_1/stack"
  input: "bidirectional_1/forward_gru_1_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_1/forward_gru_1_1/runtime"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\0001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/strided_slice"
  op: "StridedSlice"
  input: "bidirectional_1/backward_gru_1_1/Shape"
  input: "bidirectional_1/backward_gru_1_1/strided_slice/stack"
  input: "bidirectional_1/backward_gru_1_1/strided_slice/stack_1"
  input: "bidirectional_1/backward_gru_1_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/zeros/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/zeros/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/strided_slice"
  input: "bidirectional_1/backward_gru_1_1/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/zeros/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/zeros/Less"
  op: "Less"
  input: "bidirectional_1/backward_gru_1_1/zeros/mul"
  input: "bidirectional_1/backward_gru_1_1/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/zeros/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/zeros/packed"
  op: "Pack"
  input: "bidirectional_1/backward_gru_1_1/strided_slice"
  input: "bidirectional_1/backward_gru_1_1/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/zeros"
  op: "Fill"
  input: "bidirectional_1/backward_gru_1_1/zeros/packed"
  input: "bidirectional_1/backward_gru_1_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/transpose"
  op: "Transpose"
  input: "bidirectional/concat"
  input: "bidirectional_1/backward_gru_1_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "1\000\000\000d\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/strided_slice_1"
  op: "StridedSlice"
  input: "bidirectional_1/backward_gru_1_1/Shape_1"
  input: "bidirectional_1/backward_gru_1_1/strided_slice_1/stack"
  input: "bidirectional_1/backward_gru_1_1/strided_slice_1/stack_1"
  input: "bidirectional_1/backward_gru_1_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 49
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:48"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/zeros"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:47"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:46"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:45"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:44"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:43"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:42"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:41"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:40"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:39"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:38"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:37"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:36"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:35"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:34"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:33"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:32"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:31"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:30"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:29"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:28"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:27"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:26"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:25"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:24"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:23"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:22"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:21"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:20"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:19"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:18"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:17"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:16"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:15"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:14"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:13"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:12"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:11"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:10"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:9"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:8"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:7"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:6"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:5"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:4"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/unstack"
  op: "Unpack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/MatMul"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/unstack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/split"
  op: "Split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/split/split_dim"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/MatMul_1"
  op: "MatMul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/MatMul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/split_1"
  op: "SplitV"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/BiasAdd_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/Const_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/add"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/split"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/add_1"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/split:1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/mul"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/Sigmoid_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/add_2"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/split:2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/Tanh"
  op: "Tanh"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/mul_1"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/Sigmoid"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/sub"
  op: "Sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/sub/x"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/mul_2"
  op: "Mul"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/sub"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/add_3"
  op: "AddV2"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/mul_1"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/stack"
  op: "Pack"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_1/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_2/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_3/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_4/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_5/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_6/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_7/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_8/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_9/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_10/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_11/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_12/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_13/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_14/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_15/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_16/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_17/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_18/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_19/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_20/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_21/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_22/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_23/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_24/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_25/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_26/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_27/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_28/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_29/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_30/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_31/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_32/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_33/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_34/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_35/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_36/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_37/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_38/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_39/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_40/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_41/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_42/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_43/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_44/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_45/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_46/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_47/add_3"
  input: "bidirectional_1/backward_gru_1_1/gru_cell_5_48/add_3"
  attr {
    key: "N"
    value {
      i: 49
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/transpose_1"
  op: "Transpose"
  input: "bidirectional_1/backward_gru_1_1/stack"
  input: "bidirectional_1/backward_gru_1_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_1/backward_gru_1_1/runtime"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_1/ReverseV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_1/ReverseV2"
  op: "ReverseV2"
  input: "bidirectional_1/backward_gru_1_1/transpose_1"
  input: "bidirectional_1/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bidirectional_1/concat"
  op: "ConcatV2"
  input: "bidirectional_1/forward_gru_1_1/transpose_1"
  input: "bidirectional_1/ReverseV2"
  input: "bidirectional_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\030\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\031\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "bidirectional_1/concat"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^strided_slice/stack"
}
node {
  name: "VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_1/kernel"
}
node {
  name: "VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
}
node {
  name: "VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
}
node {
  name: "VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "conv2d/bias"
}
node {
  name: "VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "bidirectional/backward_gru/gru_cell_2/recurrent_kernel"
}
node {
  name: "VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "conv2d/kernel"
}
node {
  name: "VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/moving_variance"
}
node {
  name: "VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "batch_normalization/moving_mean"
}
node {
  name: "VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "batch_normalization/moving_variance"
}
node {
  name: "VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
}
node {
  name: "VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel"
}
node {
  name: "VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/gamma"
}
node {
  name: "VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "bidirectional/forward_gru/gru_cell_1/recurrent_kernel"
}
node {
  name: "VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
}
node {
  name: "VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/beta"
}
node {
  name: "VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "conv2d_1/bias"
}
node {
  name: "VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/moving_mean"
}
node {
  name: "VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
}
node {
  name: "VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
}
node {
  name: "VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
}
node {
  name: "VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "batch_normalization/gamma"
}
node {
  name: "VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "batch_normalization/beta"
}
node {
  name: "VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
}
node {
  name: "VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel"
}
node {
  name: "init"
  op: "NoOp"
  input: "^batch_normalization/beta/Assign"
  input: "^batch_normalization/gamma/Assign"
  input: "^batch_normalization/moving_mean/Assign"
  input: "^batch_normalization/moving_variance/Assign"
  input: "^batch_normalization_1/beta/Assign"
  input: "^batch_normalization_1/gamma/Assign"
  input: "^batch_normalization_1/moving_mean/Assign"
  input: "^batch_normalization_1/moving_variance/Assign"
  input: "^bidirectional/backward_gru/gru_cell_2/bias/Assign"
  input: "^bidirectional/backward_gru/gru_cell_2/kernel/Assign"
  input: "^bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Assign"
  input: "^bidirectional/forward_gru/gru_cell_1/bias/Assign"
  input: "^bidirectional/forward_gru/gru_cell_1/kernel/Assign"
  input: "^bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Assign"
  input: "^bidirectional_1/backward_gru_1/gru_cell_5/bias/Assign"
  input: "^bidirectional_1/backward_gru_1/gru_cell_5/kernel/Assign"
  input: "^bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Assign"
  input: "^bidirectional_1/forward_gru_1/gru_cell_4/bias/Assign"
  input: "^bidirectional_1/forward_gru_1/gru_cell_4/kernel/Assign"
  input: "^bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Assign"
  input: "^conv2d/bias/Assign"
  input: "^conv2d/kernel/Assign"
  input: "^conv2d_1/bias/Assign"
  input: "^conv2d_1/kernel/Assign"
}
node {
  name: "group_deps_2"
  op: "NoOp"
  input: "^strided_slice/stack_1"
}
node {
  name: "group_deps_3"
  op: "NoOp"
  input: "^strided_slice/stack_2"
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel"
    }
  }
}
node {
  name: "dense/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
}
node {
  name: "dense/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias"
    }
  }
}
node {
  name: "dense/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias"
}
node {
  name: "dense/bias/Assign"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "strided_slice"
  input: "dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dot/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dot/ExpandDims"
  op: "ExpandDims"
  input: "dense/BiasAdd"
  input: "dot/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dot/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dot/transpose"
  op: "Transpose"
  input: "bidirectional_1/concat"
  input: "dot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dot/MatMul"
  op: "BatchMatMulV2"
  input: "dot/ExpandDims"
  input: "dot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "dot/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\0001\000\000\000"
      }
    }
  }
}
node {
  name: "dot/Squeeze"
  op: "Squeeze"
  input: "dot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "softmax/Softmax"
  op: "Softmax"
  input: "dot/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dot_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dot_1/ExpandDims"
  op: "ExpandDims"
  input: "softmax/Softmax"
  input: "dot_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dot_1/MatMul"
  op: "BatchMatMulV2"
  input: "dot_1/ExpandDims"
  input: "bidirectional_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "dot_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dot_1/Squeeze"
  op: "Squeeze"
  input: "dot_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_1/kernel/Initializer/random_uniform/max"
  input: "dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_1/kernel/Initializer/random_uniform/mul"
  input: "dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel"
    }
  }
}
node {
  name: "dense_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
}
node {
  name: "dense_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias"
    }
  }
}
node {
  name: "dense_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
}
node {
  name: "dense_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "dense_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "strided_slice"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dot_2/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dot_2/ExpandDims"
  op: "ExpandDims"
  input: "dense_1/BiasAdd"
  input: "dot_2/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dot_2/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dot_2/transpose"
  op: "Transpose"
  input: "bidirectional_1/concat"
  input: "dot_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dot_2/MatMul"
  op: "BatchMatMulV2"
  input: "dot_2/ExpandDims"
  input: "dot_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "dot_2/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\0001\000\000\000"
      }
    }
  }
}
node {
  name: "dot_2/Squeeze"
  op: "Squeeze"
  input: "dot_2/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "softmax_1/Softmax"
  op: "Softmax"
  input: "dot_2/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dot_3/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dot_3/ExpandDims"
  op: "ExpandDims"
  input: "softmax_1/Softmax"
  input: "dot_3/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dot_3/MatMul"
  op: "BatchMatMulV2"
  input: "dot_3/ExpandDims"
  input: "bidirectional_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "dot_3/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dot_3/Squeeze"
  op: "Squeeze"
  input: "dot_3/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_2/kernel/Initializer/random_uniform/max"
  input: "dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_2/kernel/Initializer/random_uniform/mul"
  input: "dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
}
node {
  name: "dense_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel"
    }
  }
}
node {
  name: "dense_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
}
node {
  name: "dense_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias"
    }
  }
}
node {
  name: "dense_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
}
node {
  name: "dense_2/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "dense_2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul"
  op: "MatMul"
  input: "strided_slice"
  input: "dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/BiasAdd"
  op: "BiasAdd"
  input: "dense_2/MatMul"
  input: "dense_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dot_4/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dot_4/ExpandDims"
  op: "ExpandDims"
  input: "dense_2/BiasAdd"
  input: "dot_4/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dot_4/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dot_4/transpose"
  op: "Transpose"
  input: "bidirectional_1/concat"
  input: "dot_4/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dot_4/MatMul"
  op: "BatchMatMulV2"
  input: "dot_4/ExpandDims"
  input: "dot_4/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "dot_4/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\0001\000\000\000"
      }
    }
  }
}
node {
  name: "dot_4/Squeeze"
  op: "Squeeze"
  input: "dot_4/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "softmax_2/Softmax"
  op: "Softmax"
  input: "dot_4/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dot_5/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dot_5/ExpandDims"
  op: "ExpandDims"
  input: "softmax_2/Softmax"
  input: "dot_5/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dot_5/MatMul"
  op: "BatchMatMulV2"
  input: "dot_5/ExpandDims"
  input: "bidirectional_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "dot_5/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dot_5/Squeeze"
  op: "Squeeze"
  input: "dot_5/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_3/kernel/Initializer/random_uniform/max"
  input: "dense_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_3/kernel/Initializer/random_uniform/mul"
  input: "dense_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
}
node {
  name: "dense_3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_3/kernel"
    }
  }
}
node {
  name: "dense_3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel"
}
node {
  name: "dense_3/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_3/kernel"
  input: "dense_3/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_3/bias"
    }
  }
}
node {
  name: "dense_3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_3/bias"
}
node {
  name: "dense_3/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_3/bias"
  input: "dense_3/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/MatMul"
  op: "MatMul"
  input: "strided_slice"
  input: "dense_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/BiasAdd"
  op: "BiasAdd"
  input: "dense_3/MatMul"
  input: "dense_3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dot_6/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dot_6/ExpandDims"
  op: "ExpandDims"
  input: "dense_3/BiasAdd"
  input: "dot_6/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dot_6/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dot_6/transpose"
  op: "Transpose"
  input: "bidirectional_1/concat"
  input: "dot_6/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dot_6/MatMul"
  op: "BatchMatMulV2"
  input: "dot_6/ExpandDims"
  input: "dot_6/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "dot_6/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\0001\000\000\000"
      }
    }
  }
}
node {
  name: "dot_6/Squeeze"
  op: "Squeeze"
  input: "dot_6/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "softmax_3/Softmax"
  op: "Softmax"
  input: "dot_6/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dot_7/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dot_7/ExpandDims"
  op: "ExpandDims"
  input: "softmax_3/Softmax"
  input: "dot_7/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dot_7/MatMul"
  op: "BatchMatMulV2"
  input: "dot_7/ExpandDims"
  input: "bidirectional_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "dot_7/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dot_7/Squeeze"
  op: "Squeeze"
  input: "dot_7/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "concatenate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concatenate/concat"
  op: "ConcatV2"
  input: "dot_1/Squeeze"
  input: "dot_3/Squeeze"
  input: "dot_5/Squeeze"
  input: "dot_7/Squeeze"
  input: "concatenate/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout/cond"
  op: "If"
  input: "keras_learning_phase"
  input: "concatenate/concat"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "dropout_cond_false_7125"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1024
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "dropout_cond_true_7124"
      }
    }
  }
}
node {
  name: "dropout/cond/Identity"
  op: "Identity"
  input: "dropout/cond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/Identity_1"
  op: "Identity"
  input: "dropout/cond:1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "dropout/cond/Identity_2"
  op: "Identity"
  input: "dropout/cond:2"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "dropout/cond/Identity_3"
  op: "Identity"
  input: "dropout/cond:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "dropout/cond/Identity_4"
  op: "Identity"
  input: "dropout/cond:4"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "dropout/cond/Identity_5"
  op: "Identity"
  input: "dropout/cond:5"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "dropout/cond/Identity_6"
  op: "Identity"
  input: "dropout/cond:6"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "dropout/cond/Identity_7"
  op: "Identity"
  input: "dropout/cond:7"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07426106929779053
      }
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07426106929779053
      }
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_4/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_4/kernel/Initializer/random_uniform/max"
  input: "dense_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_4/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_4/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_4/kernel/Initializer/random_uniform/mul"
  input: "dense_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
}
node {
  name: "dense_4/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_4/kernel"
    }
  }
}
node {
  name: "dense_4/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_4/kernel"
}
node {
  name: "dense_4/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_4/kernel"
  input: "dense_4/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_4/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_4/bias"
    }
  }
}
node {
  name: "dense_4/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_4/bias"
}
node {
  name: "dense_4/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_4/bias"
  input: "dense_4/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/MatMul"
  op: "MatMul"
  input: "dropout/cond/Identity"
  input: "dense_4/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_4/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/BiasAdd"
  op: "BiasAdd"
  input: "dense_4/MatMul"
  input: "dense_4/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_4/Relu"
  op: "Relu"
  input: "dense_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_5/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_5/kernel/Initializer/random_uniform/max"
  input: "dense_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_5/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_5/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_5/kernel/Initializer/random_uniform/mul"
  input: "dense_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
}
node {
  name: "dense_5/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_5/kernel"
    }
  }
}
node {
  name: "dense_5/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_5/kernel"
}
node {
  name: "dense_5/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_5/kernel"
  input: "dense_5/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_5/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_5/bias"
    }
  }
}
node {
  name: "dense_5/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_5/bias"
}
node {
  name: "dense_5/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_5/bias"
  input: "dense_5/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/MatMul"
  op: "MatMul"
  input: "dense_4/Relu"
  input: "dense_5/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_5/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/BiasAdd"
  op: "BiasAdd"
  input: "dense_5/MatMul"
  input: "dense_5/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_5_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total"
    }
  }
}
node {
  name: "total/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "total/Assign"
  op: "AssignVariableOp"
  input: "total"
  input: "total/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count"
    }
  }
}
node {
  name: "count/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "count/Assign"
  op: "AssignVariableOp"
  input: "count"
  input: "count/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/Squeeze"
  op: "Squeeze"
  input: "dense_5_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "metrics/accuracy/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/accuracy/ArgMax"
  op: "ArgMax"
  input: "dense_5/BiasAdd"
  input: "metrics/accuracy/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/accuracy/Cast"
  op: "Cast"
  input: "metrics/accuracy/ArgMax"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/Equal"
  op: "Equal"
  input: "metrics/accuracy/Squeeze"
  input: "metrics/accuracy/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/accuracy/Cast_1"
  op: "Cast"
  input: "metrics/accuracy/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/accuracy/Sum"
  op: "Sum"
  input: "metrics/accuracy/Cast_1"
  input: "metrics/accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total"
  input: "metrics/accuracy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/accuracy/AssignAddVariableOp"
  input: "^metrics/accuracy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "metrics/accuracy/Cast_2"
  op: "Cast"
  input: "metrics/accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count"
  input: "metrics/accuracy/Cast_2"
  input: "^metrics/accuracy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/accuracy/AssignAddVariableOp"
  input: "^metrics/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/div_no_nan/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/div_no_nan/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/div_no_nan"
  op: "DivNoNan"
  input: "metrics/accuracy/div_no_nan/ReadVariableOp"
  input: "metrics/accuracy/div_no_nan/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/Identity"
  op: "Identity"
  input: "metrics/accuracy/div_no_nan"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5_loss/Cast"
  op: "Cast"
  input: "dense_5_target"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_5_loss/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense_5_loss/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/dense_5_loss/Reshape"
  op: "Reshape"
  input: "loss/dense_5_loss/Cast"
  input: "loss/dense_5_loss/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_5_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/dense_5_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_5_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/dense_5_loss/strided_slice"
  op: "StridedSlice"
  input: "loss/dense_5_loss/Shape"
  input: "loss/dense_5_loss/strided_slice/stack"
  input: "loss/dense_5_loss/strided_slice/stack_1"
  input: "loss/dense_5_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/dense_5_loss/Reshape_1/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/dense_5_loss/Reshape_1/shape"
  op: "Pack"
  input: "loss/dense_5_loss/Reshape_1/shape/0"
  input: "loss/dense_5_loss/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/dense_5_loss/Reshape_1"
  op: "Reshape"
  input: "dense_5/BiasAdd"
  input: "loss/dense_5_loss/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_5_loss/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Shape"
  input: "loss/dense_5_loss/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_5_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "loss/dense_5_loss/Reshape_1"
  input: "loss/dense_5_loss/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "loss/dense_5_loss/weighted_loss/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/dense_5_loss/weighted_loss/Mul"
  op: "Mul"
  input: "loss/dense_5_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "loss/dense_5_loss/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_5_loss/Sum"
  op: "Sum"
  input: "loss/dense_5_loss/weighted_loss/Mul"
  input: "loss/dense_5_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_5_loss/num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "loss/dense_5_loss/num_elements/Cast"
  op: "Cast"
  input: "loss/dense_5_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_5_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/dense_5_loss/Sum_1"
  op: "Sum"
  input: "loss/dense_5_loss/Sum"
  input: "loss/dense_5_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_5_loss/value"
  op: "DivNoNan"
  input: "loss/dense_5_loss/Sum_1"
  input: "loss/dense_5_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/dense_5_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/conv2d/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/conv2d/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/conv2d/kernel/Regularizer/Square"
  input: "loss/conv2d/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/conv2d/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv2d/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/conv2d/kernel/Regularizer/mul/x"
  input: "loss/conv2d/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d/bias/Regularizer/Square"
  op: "Square"
  input: "loss/conv2d/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/conv2d/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/conv2d/bias/Regularizer/Square"
  input: "loss/conv2d/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/conv2d/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv2d/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/conv2d/bias/Regularizer/mul/x"
  input: "loss/conv2d/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d_1/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d_1/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/conv2d_1/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d_1/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/conv2d_1/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/conv2d_1/kernel/Regularizer/Square"
  input: "loss/conv2d_1/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/conv2d_1/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv2d_1/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/conv2d_1/kernel/Regularizer/mul/x"
  input: "loss/conv2d_1/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d_1/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d_1/bias/Regularizer/Square"
  op: "Square"
  input: "loss/conv2d_1/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d_1/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/conv2d_1/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/conv2d_1/bias/Regularizer/Square"
  input: "loss/conv2d_1/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/conv2d_1/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv2d_1/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/conv2d_1/bias/Regularizer/mul/x"
  input: "loss/conv2d_1/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer/Square"
  input: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer/mul/x"
  input: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer/Square"
  op: "Square"
  input: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer/Square"
  input: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer/mul/x"
  input: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer/Square"
  input: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer/mul/x"
  input: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer/Square"
  op: "Square"
  input: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer/Square"
  input: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer/mul/x"
  input: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer/Square"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer/mul/x"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer/Square"
  op: "Square"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer/Square"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer/mul/x"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer/Square"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer/mul/x"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer/Square"
  op: "Square"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer/Square"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer/mul/x"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/dense/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense/kernel/Regularizer/Square"
  input: "loss/dense/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/dense/kernel/Regularizer/mul/x"
  input: "loss/dense/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense/bias/Regularizer/Square"
  op: "Square"
  input: "loss/dense/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense/bias/Regularizer/Square"
  input: "loss/dense/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/dense/bias/Regularizer/mul/x"
  input: "loss/dense/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/dense_1/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense_1/kernel/Regularizer/Square"
  input: "loss/dense_1/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/dense_1/kernel/Regularizer/mul/x"
  input: "loss/dense_1/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer/Square"
  op: "Square"
  input: "loss/dense_1/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense_1/bias/Regularizer/Square"
  input: "loss/dense_1/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/dense_1/bias/Regularizer/mul/x"
  input: "loss/dense_1/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/dense_2/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense_2/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense_2/kernel/Regularizer/Square"
  input: "loss/dense_2/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_2/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_2/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/dense_2/kernel/Regularizer/mul/x"
  input: "loss/dense_2/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2/bias/Regularizer/Square"
  op: "Square"
  input: "loss/dense_2/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_2/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense_2/bias/Regularizer/Square"
  input: "loss/dense_2/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_2/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_2/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/dense_2/bias/Regularizer/mul/x"
  input: "loss/dense_2/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_3/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_3/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/dense_3/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_3/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense_3/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense_3/kernel/Regularizer/Square"
  input: "loss/dense_3/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_3/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_3/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/dense_3/kernel/Regularizer/mul/x"
  input: "loss/dense_3/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_3/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_3/bias/Regularizer/Square"
  op: "Square"
  input: "loss/dense_3/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_3/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_3/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense_3/bias/Regularizer/Square"
  input: "loss/dense_3/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_3/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_3/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/dense_3/bias/Regularizer/mul/x"
  input: "loss/dense_3/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_4/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_4/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/dense_4/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_4/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense_4/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense_4/kernel/Regularizer/Square"
  input: "loss/dense_4/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_4/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_4/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/dense_4/kernel/Regularizer/mul/x"
  input: "loss/dense_4/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_4/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_4/bias/Regularizer/Square"
  op: "Square"
  input: "loss/dense_4/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_4/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_4/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense_4/bias/Regularizer/Square"
  input: "loss/dense_4/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_4/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_4/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/dense_4/bias/Regularizer/mul/x"
  input: "loss/dense_4/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/dense_5/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense_5/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense_5/kernel/Regularizer/Square"
  input: "loss/dense_5/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_5/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_5/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/dense_5/kernel/Regularizer/mul/x"
  input: "loss/dense_5/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5/bias/Regularizer/Square"
  op: "Square"
  input: "loss/dense_5/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_5/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense_5/bias/Regularizer/Square"
  input: "loss/dense_5/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_5/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_5/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/dense_5/bias/Regularizer/mul/x"
  input: "loss/dense_5/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/conv2d/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/conv2d/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/conv2d/kernel/Regularizer_1/Square"
  input: "loss/conv2d/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/conv2d/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv2d/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/conv2d/kernel/Regularizer_1/mul/x"
  input: "loss/conv2d/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/conv2d/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/conv2d/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/conv2d/bias/Regularizer_1/Square"
  input: "loss/conv2d/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/conv2d/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv2d/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/conv2d/bias/Regularizer_1/mul/x"
  input: "loss/conv2d/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d_1/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d_1/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/conv2d_1/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d_1/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/conv2d_1/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/conv2d_1/kernel/Regularizer_1/Square"
  input: "loss/conv2d_1/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/conv2d_1/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv2d_1/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/conv2d_1/kernel/Regularizer_1/mul/x"
  input: "loss/conv2d_1/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d_1/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d_1/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/conv2d_1/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/conv2d_1/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/conv2d_1/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/conv2d_1/bias/Regularizer_1/Square"
  input: "loss/conv2d_1/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/conv2d_1/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv2d_1/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/conv2d_1/bias/Regularizer_1/mul/x"
  input: "loss/conv2d_1/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer_1/Square"
  input: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer_1/mul/x"
  input: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/forward_gru/gru_cell_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer_1/Square"
  input: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer_1/mul/x"
  input: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer_1/Square"
  input: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer_1/mul/x"
  input: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional/backward_gru/gru_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer_1/Square"
  input: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer_1/mul/x"
  input: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer_1/Square"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer_1/mul/x"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/forward_gru_1/gru_cell_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer_1/Square"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer_1/mul/x"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer_1/Square"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer_1/mul/x"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bidirectional_1/backward_gru_1/gru_cell_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer_1/Square"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer_1/mul/x"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense/kernel/Regularizer_1/Square"
  input: "loss/dense/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense/kernel/Regularizer_1/mul/x"
  input: "loss/dense/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense/bias/Regularizer_1/Square"
  input: "loss/dense/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense/bias/Regularizer_1/mul/x"
  input: "loss/dense/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense_1/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense_1/kernel/Regularizer_1/Square"
  input: "loss/dense_1/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense_1/kernel/Regularizer_1/mul/x"
  input: "loss/dense_1/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense_1/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense_1/bias/Regularizer_1/Square"
  input: "loss/dense_1/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense_1/bias/Regularizer_1/mul/x"
  input: "loss/dense_1/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense_2/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense_2/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense_2/kernel/Regularizer_1/Square"
  input: "loss/dense_2/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_2/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_2/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense_2/kernel/Regularizer_1/mul/x"
  input: "loss/dense_2/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense_2/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_2/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense_2/bias/Regularizer_1/Square"
  input: "loss/dense_2/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_2/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_2/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense_2/bias/Regularizer_1/mul/x"
  input: "loss/dense_2/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_3/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_3/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense_3/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_3/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense_3/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense_3/kernel/Regularizer_1/Square"
  input: "loss/dense_3/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_3/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_3/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense_3/kernel/Regularizer_1/mul/x"
  input: "loss/dense_3/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_3/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_3/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense_3/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_3/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_3/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense_3/bias/Regularizer_1/Square"
  input: "loss/dense_3/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_3/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_3/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense_3/bias/Regularizer_1/mul/x"
  input: "loss/dense_3/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_4/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_4/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense_4/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_4/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense_4/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense_4/kernel/Regularizer_1/Square"
  input: "loss/dense_4/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_4/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_4/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense_4/kernel/Regularizer_1/mul/x"
  input: "loss/dense_4/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_4/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_4/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense_4/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_4/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_4/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense_4/bias/Regularizer_1/Square"
  input: "loss/dense_4/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_4/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_4/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense_4/bias/Regularizer_1/mul/x"
  input: "loss/dense_4/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense_5/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense_5/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense_5/kernel/Regularizer_1/Square"
  input: "loss/dense_5/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_5/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_5/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense_5/kernel/Regularizer_1/mul/x"
  input: "loss/dense_5/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense_5/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_5/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_5/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense_5/bias/Regularizer_1/Square"
  input: "loss/dense_5/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_5/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_5/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense_5/bias/Regularizer_1/mul/x"
  input: "loss/dense_5/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/AddN"
  op: "AddN"
  input: "loss/conv2d/kernel/Regularizer/mul"
  input: "loss/conv2d/bias/Regularizer/mul"
  input: "loss/conv2d_1/kernel/Regularizer/mul"
  input: "loss/conv2d_1/bias/Regularizer/mul"
  input: "loss/bidirectional/forward_gru/gru_cell_1/kernel/Regularizer/mul"
  input: "loss/bidirectional/forward_gru/gru_cell_1/bias/Regularizer/mul"
  input: "loss/bidirectional/backward_gru/gru_cell_2/kernel/Regularizer/mul"
  input: "loss/bidirectional/backward_gru/gru_cell_2/bias/Regularizer/mul"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/kernel/Regularizer/mul"
  input: "loss/bidirectional_1/forward_gru_1/gru_cell_4/bias/Regularizer/mul"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/kernel/Regularizer/mul"
  input: "loss/bidirectional_1/backward_gru_1/gru_cell_5/bias/Regularizer/mul"
  input: "loss/dense/kernel/Regularizer/mul"
  input: "loss/dense/bias/Regularizer/mul"
  input: "loss/dense_1/kernel/Regularizer/mul"
  input: "loss/dense_1/bias/Regularizer/mul"
  input: "loss/dense_2/kernel/Regularizer/mul"
  input: "loss/dense_2/bias/Regularizer/mul"
  input: "loss/dense_3/kernel/Regularizer/mul"
  input: "loss/dense_3/bias/Regularizer/mul"
  input: "loss/dense_4/kernel/Regularizer/mul"
  input: "loss/dense_4/bias/Regularizer/mul"
  input: "loss/dense_5/kernel/Regularizer/mul"
  input: "loss/dense_5/bias/Regularizer/mul"
  attr {
    key: "N"
    value {
      i: 24
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/AddN_1"
  op: "AddN"
  input: "loss/mul"
  input: "loss/AddN"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^batch_normalization/beta/Assign"
  input: "^batch_normalization/gamma/Assign"
  input: "^batch_normalization/moving_mean/Assign"
  input: "^batch_normalization/moving_variance/Assign"
  input: "^batch_normalization_1/beta/Assign"
  input: "^batch_normalization_1/gamma/Assign"
  input: "^batch_normalization_1/moving_mean/Assign"
  input: "^batch_normalization_1/moving_variance/Assign"
  input: "^bidirectional/backward_gru/gru_cell_2/bias/Assign"
  input: "^bidirectional/backward_gru/gru_cell_2/kernel/Assign"
  input: "^bidirectional/backward_gru/gru_cell_2/recurrent_kernel/Assign"
  input: "^bidirectional/forward_gru/gru_cell_1/bias/Assign"
  input: "^bidirectional/forward_gru/gru_cell_1/kernel/Assign"
  input: "^bidirectional/forward_gru/gru_cell_1/recurrent_kernel/Assign"
  input: "^bidirectional_1/backward_gru_1/gru_cell_5/bias/Assign"
  input: "^bidirectional_1/backward_gru_1/gru_cell_5/kernel/Assign"
  input: "^bidirectional_1/backward_gru_1/gru_cell_5/recurrent_kernel/Assign"
  input: "^bidirectional_1/forward_gru_1/gru_cell_4/bias/Assign"
  input: "^bidirectional_1/forward_gru_1/gru_cell_4/kernel/Assign"
  input: "^bidirectional_1/forward_gru_1/gru_cell_4/recurrent_kernel/Assign"
  input: "^conv2d/bias/Assign"
  input: "^conv2d/kernel/Assign"
  input: "^conv2d_1/bias/Assign"
  input: "^conv2d_1/kernel/Assign"
  input: "^dense/bias/Assign"
  input: "^dense/kernel/Assign"
  input: "^dense_1/bias/Assign"
  input: "^dense_1/kernel/Assign"
  input: "^dense_2/bias/Assign"
  input: "^dense_2/kernel/Assign"
  input: "^dense_3/bias/Assign"
  input: "^dense_3/kernel/Assign"
  input: "^dense_4/bias/Assign"
  input: "^dense_4/kernel/Assign"
  input: "^dense_5/bias/Assign"
  input: "^dense_5/kernel/Assign"
}
library {
  function {
    signature {
      name: "batch_normalization_1_cond_false_362"
      input_arg {
        name: "readvariableop_batch_normalization_1_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_batch_normalization_1_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_batch_normalization_1_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_batch_normalization_1_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_conv2d_1_relu"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_batch_normalization_1_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_batch_normalization_1_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_batch_normalization_1_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_batch_normalization_1_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_conv2d_1_relu"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 100
                }
                dim {
                  size: 49
                }
                dim {
                  size: 40
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "batch_normalization_1_cond_true_361"
      input_arg {
        name: "readvariableop_batch_normalization_1_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_batch_normalization_1_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_batch_normalization_1_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_batch_normalization_1_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_conv2d_1_relu"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_batch_normalization_1_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_batch_normalization_1_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_batch_normalization_1_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_batch_normalization_1_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_conv2d_1_relu"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 100
                }
                dim {
                  size: 49
                }
                dim {
                  size: 40
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "batch_normalization_cond_false_238"
      input_arg {
        name: "readvariableop_batch_normalization_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_batch_normalization_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_batch_normalization_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_batch_normalization_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_conv2d_relu"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_batch_normalization_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_batch_normalization_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_batch_normalization_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_batch_normalization_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_conv2d_relu"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 100
                }
                dim {
                  size: 49
                }
                dim {
                  size: 40
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "dropout_cond_true_7124"
      input_arg {
        name: "dropout_mul_concatenate_concat"
        type: DT_FLOAT
      }
      output_arg {
        name: "dropout_mul_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "dropout/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.25
          }
        }
      }
      experimental_debug_info {
        original_node_names: "dropout/Const"
      }
    }
    node_def {
      name: "dropout/Mul"
      op: "Mul"
      input: "dropout_mul_concatenate_concat"
      input: "dropout/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "dropout/Mul"
      }
    }
    node_def {
      name: "dropout/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "d\000\000\000\000\004\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "dropout/Shape"
      }
    }
    node_def {
      name: "dropout/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "dropout/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
      experimental_debug_info {
        original_node_names: "dropout/random_uniform/RandomUniform"
      }
    }
    node_def {
      name: "dropout/GreaterEqual/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
      experimental_debug_info {
        original_node_names: "dropout/GreaterEqual/y"
      }
    }
    node_def {
      name: "dropout/GreaterEqual"
      op: "GreaterEqual"
      input: "dropout/random_uniform/RandomUniform:output:0"
      input: "dropout/GreaterEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "dropout/GreaterEqual"
      }
    }
    node_def {
      name: "dropout/Cast"
      op: "Cast"
      input: "dropout/GreaterEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "dropout/Cast"
      }
    }
    node_def {
      name: "dropout/Mul_1"
      op: "Mul"
      input: "dropout/Mul:z:0"
      input: "dropout/Cast:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "dropout/Mul_1"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "dropout/Const:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "dropout/Mul:z:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "dropout/Shape:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "dropout/random_uniform/RandomUniform:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "dropout/GreaterEqual/y:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "dropout/GreaterEqual:z:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_BOOL
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "dropout/Cast:y:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "dropout_mul_1"
      value: "dropout/Mul_1:z:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 100
                }
                dim {
                  size: 1024
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "dropout_cond_false_7125"
      input_arg {
        name: "identity_concatenate_concat"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalnone"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_6"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "identity_concatenate_concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "OptionalNone"
      op: "OptionalNone"
      experimental_debug_info {
        original_node_names: "OptionalNone"
      }
    }
    node_def {
      name: "OptionalNone_1"
      op: "OptionalNone"
      experimental_debug_info {
        original_node_names: "OptionalNone_1"
      }
    }
    node_def {
      name: "OptionalNone_2"
      op: "OptionalNone"
      experimental_debug_info {
        original_node_names: "OptionalNone_2"
      }
    }
    node_def {
      name: "OptionalNone_3"
      op: "OptionalNone"
      experimental_debug_info {
        original_node_names: "OptionalNone_3"
      }
    }
    node_def {
      name: "OptionalNone_4"
      op: "OptionalNone"
      experimental_debug_info {
        original_node_names: "OptionalNone_4"
      }
    }
    node_def {
      name: "OptionalNone_5"
      op: "OptionalNone"
      experimental_debug_info {
        original_node_names: "OptionalNone_5"
      }
    }
    node_def {
      name: "OptionalNone_6"
      op: "OptionalNone"
      experimental_debug_info {
        original_node_names: "OptionalNone_6"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "optionalnone"
      value: "OptionalNone:optional:0"
    }
    ret {
      key: "optionalnone_1"
      value: "OptionalNone_1:optional:0"
    }
    ret {
      key: "optionalnone_2"
      value: "OptionalNone_2:optional:0"
    }
    ret {
      key: "optionalnone_3"
      value: "OptionalNone_3:optional:0"
    }
    ret {
      key: "optionalnone_4"
      value: "OptionalNone_4:optional:0"
    }
    ret {
      key: "optionalnone_5"
      value: "OptionalNone_5:optional:0"
    }
    ret {
      key: "optionalnone_6"
      value: "OptionalNone_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 100
                }
                dim {
                  size: 1024
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "batch_normalization_cond_1_true_305"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "batch_normalization_cond_1_false_306"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "batch_normalization_1_cond_1_false_430"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "batch_normalization_1_cond_1_true_429"
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9900000095367432
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
  function {
    signature {
      name: "batch_normalization_cond_true_237"
      input_arg {
        name: "readvariableop_batch_normalization_gamma"
        type: DT_RESOURCE
      }
      input_arg {
        name: "readvariableop_1_batch_normalization_beta"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_batch_normalization_moving_mean"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_readvariableop_1_batch_normalization_moving_variance"
        type: DT_RESOURCE
      }
      input_arg {
        name: "fusedbatchnormv3_conv2d_relu"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "fusedbatchnormv3_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_6"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "readvariableop_batch_normalization_gamma"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp"
      }
    }
    node_def {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "readvariableop_1_batch_normalization_beta"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_batch_normalization_moving_mean"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp"
      }
    }
    node_def {
      name: "FusedBatchNormV3/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "fusedbatchnormv3_readvariableop_1_batch_normalization_moving_variance"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3/ReadVariableOp_1"
      }
    }
    node_def {
      name: "FusedBatchNormV3"
      op: "FusedBatchNormV3"
      input: "fusedbatchnormv3_conv2d_relu"
      input: "ReadVariableOp:value:0"
      input: "ReadVariableOp_1:value:0"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "U"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "exponential_avg_factor"
        value {
          f: 1.0
        }
      }
      attr {
        key: "is_training"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "FusedBatchNormV3"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3/ReadVariableOp_1:value:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_3"
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_1:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_4"
      }
    }
    node_def {
      name: "OptionalFromValue_5"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_2:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_5"
      }
    }
    node_def {
      name: "OptionalFromValue_6"
      op: "OptionalFromValue"
      input: "FusedBatchNormV3:reserve_space_3:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_6"
      }
    }
    ret {
      key: "fusedbatchnormv3"
      value: "FusedBatchNormV3:y:0"
    }
    ret {
      key: "fusedbatchnormv3_0"
      value: "FusedBatchNormV3:batch_mean:0"
    }
    ret {
      key: "fusedbatchnormv3_1"
      value: "FusedBatchNormV3:batch_variance:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    ret {
      key: "optionalfromvalue_5"
      value: "OptionalFromValue_5:optional:0"
    }
    ret {
      key: "optionalfromvalue_6"
      value: "OptionalFromValue_6:optional:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 100
                }
                dim {
                  size: 49
                }
                dim {
                  size: 40
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
  }
}
versions {
  producer: 418
  min_consumer: 12
}
